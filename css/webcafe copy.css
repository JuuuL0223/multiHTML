@charset "utf-8"; /*html과 동일한 인코딩 방식을 선택 해야 함. @c누르면 자동완성 됨*/
@import url("https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css"); /*encoding선언 다음에 font를 설정해야 한다!!*/
@import url("./normalize.css"); /*url함수를 불러준다*/
@import url("./reset.css"); /* css는 위에서 아래로 정의하기 때문에 위에서 적용된 것이 아래에 또 있다면 위의 것은 무시되고 아래것이 덮어쓴다. 나중에 선언한게 우선한다.*/

/* 숨김컨텐츠 (디자인상 노출 하지 않을 화면에 보이진 않지만, 스크린 리더에서 읽어야 할 것은 숨김 제목처리해라.) */
.a11y-hidden{
  background: pink;
  /* display: none; 사용하지 마시길*/
  position: absolute;
  /* top: -9999em; */
  width:1px;
  height:1px;
  margin: -1px;
  overflow: hidden;
  clip:rect(0,0,0,0);
  /* clip은 더이상 사용하지 않으므로 clip-path사용해라.  */
  clip-path:insert(0,0);
}

/* 공통스타일 */
*, *::before, *::after{
  /* 블럭잡고 alt를 누르고 화살표 위아래를 하면 문장이 옮겨진다.  */
  box-sizing:border-box;
  font-family: 'Spoqa Han Sans', 'sans-serif'; /*앞에 것 있으면 먼저 쓰고 없으면 뒤에 것 쓴다 */
}

html{
  font-size: 10px;
}
/* float이슈를 해결하기 위한 css선언 */
.clearfix::after{
  content: "";
  /* background: yellow; */
  display:block;
  clear:both;
}
ul{
  /* background: gray; */
}
ul ul{
  /* background: tomato; */
}
/* ctrl+ / 누르면 주석 추가/해제 된다.  */

/* layout */

body{
  margin: 0px;
  font-weight: 400;
  color : #181818;
  font-size:1.4rem;
}

/* 링크 스타일 */
a{
  color: inherit; /*상속받은 것은 무시하고, 내가 가진 값을 먼저 적용 한다.a의 상속은 body이므로 body색이 적용 됨 */
  text-decoration: none; /* 밑줄 그어주지 않음 */
}
/* a요소가 초첨을 받거나 a위에 마우스가 올려져있을 때  */
a:hover, a:focus{
  color: #f00;
}
/* display:flex적용하는 방식 container안에 선언해야 한다. */
.container{
  /* linear-gradient 뒤에 선언 되는 값이 아래에 깔린다.  */
  background: url("./images/bg_flower.png") no-repeat 50% 0, linear-gradient(to bottom, #999 0%, #ccc 50%, #eee 70%, #fff 100%);
  /* display: flex; */
  /* flex-direction:column;
  align-items: center; */
  /* 각각 줄바꿈 된다. flex-wrap: wrap;을 넣으면 (위의 flex-direction:column;과 유사하게 표출됨) */
  /* flex-wrap: wrap; */
  /* justify-content: center;
  flex-flow: column wrap;  */
  /* flex-wrap: wrap; flex-direction:column;을 섞어서 하나로 적은 형태  */
}

/* 아래와 같이 적어주면 공통(.header, .visual, .main, .slogan, .footer)으로 적용 되는 css를 선언할 수 있다.  */
.header, .visual, .main, .slogan, .footer{
  width: 940px;
  /* border:10px solid black;   검정색 선 상자가 만들어진다.  */
  /* border:10px solid black; */
  /* padding: 0 50px; */
  /* margin: 0 0 0 auto; */
/* 아래와 같이 작성하면 중간에 위치시킬 수 있다.  */
  margin-left: auto;
  margin-right: auto;
}
.header, .visual, .main, .slogan{
  align-self: center;
}
/* 헤더 */
.header{
  background: #ffffff;
  position: relative;
  padding: 0 30px;
  border-radius: 0 0 15px 15px;
  /* height: 10vh; 자동으로 줄었다 늘렀다 하게끔 할 예정으로 삭제*/
}
/* 로고 */
/* .shadow{
  background: black;
  height: 50px;
  position: relative;
} */

.logo{
  position: absolute;/*layer로 만드는 개념이다. 가로/세로 크기를 알려주지 않으면 컨텐츠 크기만큼 잡힌다. relative와 차이점은 따로 크기를 차지하지 않는다.*/
  top: 47px;
  left: 65px;
}

/* 멤버 링크 모음 */
.member{
  padding: 2px 0;
  text-align: right;
  font-size:0;
  margin-right: -10px;
  
  /*width: 200px; inline상자의 배치는 블록 상자의 크기에 따라 relative된다. member의 width를 줄이면 member li 안의 값도 같이 줄어든다. */
}
.member li, .member a{
  display:inline-block;
}
.member li{
  font-size:1.4rem;
  
  /* 가로방향으로 나열 된다 */
  /* width: 50px; */
}
/* a 요소보다 먼저 child가 만들어지고 ::after면 a요소보다 나중에 child가 만들어진다. */
/* .member li::before{
  content: ":";
} */

.bar::before{
  content: ":";
}
.member a{
  padding: 8px 10px;
  text-transform: uppercase;

}
.navigation{
  padding-bottom: 50px;
}
/* 메인메뉴 */
.menu{
  /* color : #fff; */
  /* background : orange;
  background-image: linear-gradient(to bottom, red,  green); 이렇게 적는것과 아랫줄과 동일함. */
/* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  height: 47px;
  border-radius: 0 0 5px 5px;  
  box-shadow: 0 -2px 0 0 #181818;
/* border-top:2px solid #000; */
  background: #e2622b linear-gradient(to bottom, #e29a2d 0%, #e2622b 30%, #e2622b 70%, #e29a2d 100%);
  
  
}

.menu-item{
  background: yellow;
  float:left;
  font-weight: 700px;
  font-size: 1.6rem;
}

.menu-sub{
  background:pink;
  position: absolute;
}

/* 복사하고 싶은 영역을 블럭을 잡고 alt + shift + 아래화살표 키를 누르면 복사 된다.   */

.visual{
  /* background: gray; */
  /* 광고 배너와 같은 곳에 사용된다. 정해져있는 고정사이트 준다. */
  height: 120px;
}
.main{
  background: orangered;
  /* height: 60vh; */
  /* 높이가 부모만큼, 가로는 컨텐츠 만큼 들어간다.  */
  /* display:flex; */
  /* 나눠있는 여백을 같은 크기만큼 해준다. 양끝은 제외. evenly를 사용하면 베스트 이지만, ie11부터 호환 가능하므로 아래와 같이 padding을 추가하자*/
  /* justify-content: space-between; */
  padding: 30px 0px;
  min-height: 400px;
  /* overflow: hidden; */
  /* justify-content: space-around; */

  /* 남아있는 여백을 균등하게 여백을 준다.  다만 ie11이상이므로 적용이 안된다. 
  justify-content: space-evenly;*/
}
/* after는 마지막 자식노드 요소를  */

.group{
  margin: 0 15px;
  float: left;
}
.group1{
  background: pink;
  /* float: left;  */
  width:250px;
}
.group2{
  /* float와 겹치지 못하게 하는 속성 clear */
  /* clear: both; */
  background: skyblue;
  /* height:100px; */
  /* float:left; */
  width: 380px;
  /* 0보다 앞의 order를 주고싶으면 -를 주고, 0보다 큰 숫자를 주고 싶다면 0보다 큰 숫자를 주면된다.  */
  /* 그룹1 -> 3 -> 2 */
  /* order: 1;  */

}
.group3{
  background: lime;
  /* float:left; */
  width: 190px;
}
.slogan{
  background: purple;
  height: 10vh;
}
.footer-bg{
  background: silver;
  
  /* flex-basis: 100%; 부모인 영역사이즈 만큼 늘려줘~ (부모는 740px이 아닌 전체 화면이므로) */
  /* flex-basis: 100%;  
  display:flex;
  justify-content: center; */
}
.footer{
  background: yellow;
  height: 10vh;
}